{
  "hash": "40f7d4fbade962cc794989e194711318",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Econometrics - Lecture 4\"\nsubtitle: \"Diagnostic Plots & Model Assumptions\"\nauthor: \"Logan Kelly, Ph.D.\"\ndate: \"January 26, 2025\"\n---\n\n\n\n## Introduction\n\nAfter establishing the fundamentals of simple linear regression and interpreting its output, it's essential to assess the validity of the regression model's assumptions. Diagnostic plots are powerful tools that help identify potential violations of these assumptions, ensuring that the Ordinary Least Squares (OLS) estimates remain reliable and unbiased. This lecture focuses on three key diagnostic plots: Residual Plots, QQ Plots for Normality of Residuals, and checks for Homoscedasticity (constant variance).\n\n## Key Concepts\n\n- Residual Plots\n- Normality of Residuals (QQ Plots)\n- Homoscedasticity (Constant Variance Check)\n\n## Theoretical Discussion\n\n### Residual Plots (Identifying Patterns)\n\nResidual plots display the residuals (differences between observed and predicted values) on the vertical axis against the fitted values or an independent variable on the horizontal axis. They help in identifying non-linearity, unequal error variances, and outliers.\n\n- **Purpose**: To assess whether the residuals exhibit any systematic patterns.\n- **Interpretation**:\n  - **No Pattern**: Suggests that the linear model is appropriate.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load necessary libraries\nif (!requireNamespace(\"pacman\", quietly = TRUE)) install.packages(\"pacman\")\npacman::p_load(ggplot2)\n\n# Simulate data with no pathology\nset.seed(100)\nx <- rnorm(100, mean = 50, sd = 10)\ny <- 5 + 2 * x + rnorm(100, mean = 0, sd = 5)\ndata_no_pathology <- data.frame(x, y)\n\n# Fit linear model\nmodel_no_pathology <- lm(y ~ x, data = data_no_pathology)\n\n# Plot Residuals vs Fitted\nggplot(data_no_pathology, aes(x = fitted(model_no_pathology), y = residuals(model_no_pathology))) +\n  geom_point(color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(title = \"Residuals vs Fitted (No Pathology)\",\n       x = \"Fitted Values\",\n       y = \"Residuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n  \n  - **Curvature)**: Indicates potential non-linearity.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulate data with nonlinearity\nset.seed(102)\nx <- seq(-3, 3, length.out = 100)\ny <- 5 + 2 * x + 1.5 * x^2 + rnorm(100, mean = 0, sd = 2)\ndata_nonlinear <- data.frame(x, y)\n\n# Fit linear model\nmodel_nonlinear <- lm(y ~ x, data = data_nonlinear)\n\n# Plot Residuals vs Fitted\nggplot(data_nonlinear, aes(x = fitted(model_nonlinear), y = residuals(model_nonlinear))) +\n  geom_point(color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(title = \"Residuals vs Fitted (Nonlinearity)\",\n       x = \"Fitted Values\",\n       y = \"Residuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n  - **Funnel Shape**: Suggests heteroscedasticity (non-constant variance).\n  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Simulate data with heteroscedasticity\nset.seed(101)\nx <- 1:100#rnorm(100, mean = 50, sd = 10)\ny <- 5 + 2 * x + rnorm(100, mean = 0, sd = x)\ndata_heteroscedastic <- data.frame(x, y)\n\n# Fit linear model\nmodel_heteroscedastic <- lm(y ~ x, data = data_heteroscedastic)\n\n\n# Plot Residuals vs Fitted\nggplot(data_heteroscedastic, aes(x = fitted(model_heteroscedastic), y = residuals(model_heteroscedastic))) +\n  geom_point(color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(title = \"Residuals vs Fitted (Heteroscedasticity)\",\n       x = \"Fitted Values\",\n       y = \"Residuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n  \n\n### Normality of Residuals (QQ Plots)\n\nQQ (Quantile-Quantile) plots compare the distribution of residuals to a normal distribution. This assessment is crucial for the validity of hypothesis tests and confidence intervals.\n\n- **Purpose**: To check if residuals are normally distributed.\n- **Interpretation**:\n  - **Points Along the Line**: Residuals are approximately normally distributed.\n  - **Deviations from the Line**: Indicate departures from normality, such as skewness or kurtosis.\n  \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set seed for reproducibility\nset.seed(13)\n\n# Example 1: Normal Residuals\nx_normal <- rnorm(100, mean = 50, sd = 10)\ny_normal <- 5 + 2 * x_normal + rnorm(100, mean = 0, sd = 10)\nmodel_normal <- lm(y_normal ~ x_normal)\nresiduals_normal <- residuals(model_normal)\n\n# Histogram\nggplot(data.frame(residuals_normal), aes(x = residuals_normal)) +\n  geom_histogram(aes(y = ..density..), bins = 20, fill = \"lightblue\", color = \"black\") +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Histogram of Residuals\",\n       x = \"Residuals\",\n       y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The dot-dot notation (`..density..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(density)` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# QQ Plot\nggplot(data.frame(residuals_normal), aes(sample = residuals_normal)) +\n  stat_qq(color = \"darkgreen\") +\n  stat_qq_line(color = \"red\") +\n  labs(title = \"QQ Plot of Residuals\",\n       x = \"Theoretical Quantiles\",\n       y = \"Sample Quantiles\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::\n\n\n\n  \n  \n\n### Homoscedasticity (Constant Variance Check)\n\nHomoscedasticity means that the residuals have constant variance across all levels of the independent variable. Violations (heteroscedasticity) can lead to inefficient estimates and biased standard errors.\n\n- **Purpose**: To ensure that the variance of residuals is consistent.\n- **Interpretation**:\n  - **Constant Spread**: Indicates homoscedasticity.\n  - **Increasing or Decreasing Spread**: Suggests heteroscedasticity.\n\n## Case Study\n\nLet's apply these diagnostic tools to a regression model using the `mtcars` dataset, where we predict miles per gallon (`mpg`) based on weight (`wt`).\n\n### Step 1: Fit the Regression Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the mtcars dataset\ndata(mtcars)\n\n# Fit a simple linear regression model\nmodel <- lm(mpg ~ wt, data = mtcars)\n\n# View the summary of the model\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = mpg ~ wt, data = mtcars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.5432 -2.3647 -0.1252  1.4096  6.8727 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  37.2851     1.8776  19.858  < 2e-16 ***\nwt           -5.3445     0.5591  -9.559 1.29e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.046 on 30 degrees of freedom\nMultiple R-squared:  0.7528,\tAdjusted R-squared:  0.7446 \nF-statistic: 91.38 on 1 and 30 DF,  p-value: 1.294e-10\n```\n\n\n:::\n:::\n\n\n\n### Step 2: Generate Diagnostic Plots\n\n#### 1. Residual Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Residuals vs Fitted\nggplot(data.frame(fitted.values = model$fitted.values, \n                  residuals = model$residuals), \n                  aes(x = fitted.values, y = residuals)) +\n  geom_point(color = \"black\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\") +\n  labs(title = \"Residuals vs Fitted\",\n       x = \"Fitted Values\",\n       y = \"Residuals\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n#### 2. Normality of Residuals\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Histogram\nggplot(data.frame(residuals = model$residuals), aes(x = residuals)) +\n  geom_histogram(aes(y = ..density..), bins = 20, fill = \"lightblue\", color = \"black\") +\n  geom_density(color = \"red\", size = 1) +\n  labs(title = \"Histogram of Residuals\",\n       x = \"Residuals\",\n       y = \"Density\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Lecture_M01-L04_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n**Interpretation**: Points should lie approximately on the reference line. Deviations suggest non-normality.\n\n### Step 3: Annotate the Regression Table\n\nBelow is the regression table obtained from `summary(model)`:\n\n|                 | Estimate | Std. Error | t value | Pr(>|t|) |\n|-----------------|----------|------------|---------|----------|\n| (Intercept)     | 37.2851  | 1.8776     | 19.856  | < 2e-16  |\n| wt              | -5.3445  | 0.5591     | -9.559  | < 2e-16  |\n\n#### Annotations:\n\n- **(Intercept)**:\n  - **Estimate**: 37.2851\n    - Predicted `mpg` when `wt` is 0.\n  - **Std. Error**: 1.8776\n    - Measures the average distance that the estimated coefficients are from the actual value.\n  - **t value**: 19.856\n    - Indicates how many standard errors the coefficient is away from zero.\n  - **Pr(>|t|)**: < 2e-16\n    - Signifies that the intercept is statistically significant.\n\n- **wt**:\n  - **Estimate**: -5.3445\n    - For each additional 1000 lbs, `mpg` decreases by approximately 5.3445 units.\n  - **Std. Error**: 0.5591\n    - Reflects the precision of the slope estimate.\n  - **t value**: -9.559\n    - Shows the slope is significantly different from zero.\n  - **Pr(>|t|)**: < 2e-16\n    - Indicates that weight is a significant predictor of `mpg`.\n\n## Conclusion\n\n- Takeaway 1: **Residual Plots** help identify non-linearity, unequal error variances, and outliers, ensuring that the linear regression model is appropriate.\n- Takeaway 2: **QQ Plots** assess the normality of residuals, which is vital for reliable hypothesis testing and confidence intervals.\n- Takeaway 3: **Homoscedasticity Checks** ensure that the variance of residuals is constant across all levels of the independent variable, maintaining the efficiency of OLS estimates.\n\n",
    "supporting": [
      "Lecture_M01-L04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}